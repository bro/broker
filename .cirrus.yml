cpus: &CPUS 8
memory: &MEMORY 6GB

config: &CONFIG --build-type=release --enable-static
memcheck_config: &MEMCHECK_CONFIG --build-type=debug --sanitizers=address

resources_template: &RESOURCES_TEMPLATE
  cpu: *CPUS
  memory: *MEMORY

branch_whitelist: &BRANCH_WHITELIST
  only_if: >
    $CIRRUS_PR != '' ||
    $CIRRUS_BRANCH == 'master' ||
    $CIRRUS_BRANCH == 'topic/neverlord/cirrus.*' ||
    $CIRRUS_BRANCH =~ 'release/.*'

ci_template: &CI_TEMPLATE
  << : *BRANCH_WHITELIST
  sync_submodules_script: git submodule update --recursive --init
  build_script: ./ci/build.sh
  test_script: ./ci/test.sh

unix_env: &UNIX_ENV
  env:
    CIRRUS_WORKING_DIR: /broker
    BROKER_CI_CPUS: *CPUS
    BROKER_CI_CONFIGURE_FLAGS: *CONFIG

# Linux EOL timelines: https://linuxlifecycle.com/
# Fedora (~13 months): https://fedoraproject.org/wiki/Fedora_Release_Life_Cycle

 # fedora32_task:
 #   container:
 #     # Fedora 32 EOL: Around May 2021
 #     dockerfile: ci/fedora-32/Dockerfile
 #     << : *RESOURCES_TEMPLATE
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # centos7_task:
 #   container:
 #     # CentOS 7 EOL: June 30, 2024
 #     dockerfile: ci/centos-7/Dockerfile
 #     << : *RESOURCES_TEMPLATE
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # debian9_task:
 #   container:
 #     # Debian 9 EOL: June 2022
 #     dockerfile: ci/debian-9/Dockerfile
 #     << : *RESOURCES_TEMPLATE
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # debian9_32bit_task:
 #   container:
 #     # Debian 9 EOL: June 2022
 #     dockerfile: ci/debian-9-32bit/Dockerfile
 #     << : *RESOURCES_TEMPLATE
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # ubuntu18_task:
 #   container:
 #     # Ubuntu 18.04 EOL: April 2023
 #     dockerfile: ci/ubuntu-18.04/Dockerfile
 #     << : *RESOURCES_TEMPLATE
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # ubuntu16_task:
 #   container:
 #     # Ubuntu 16.04 EOL: April 2021
 #     dockerfile: ci/ubuntu-16.04/Dockerfile
 #     << : *RESOURCES_TEMPLATE
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # # Apple doesn't publish official long-term support timelines, so easiest
 # # option is to only support the latest macOS release or whatever latest
 # # image is available.
 # macos_task:
 #   osx_instance:
 #     image: catalina-base
 #     # cpu/memory setting is implicitly 2 core / 4 thread and 8GB, and
 #     # trying to set it explicitly results in an error.
 #   prepare_script: ./ci/macos/prepare.sh
 #   << : *CI_TEMPLATE
 #   env:
 #     BROKER_CI_CONFIGURE_FLAGS: *CONFIG
 #     BROKER_CI_CPUS: 4
 #     # No permission to write to default location of /broker
 #     CIRRUS_WORKING_DIR: /tmp/broker
 #
 # # FreeBSD EOL timelines: https://www.freebsd.org/security/security.html#sup
 # freebsd_task:
 #   freebsd_instance:
 #     # FreeBSD 12 EOL: June 30, 2024
 #     image_family: freebsd-12-1
 #     cpu: 8
 #     # Not allowed to request less than 8GB for an 8 CPU FreeBSD VM.
 #     memory: 8GB
 #   prepare_script: ./ci/freebsd/prepare.sh
 #   << : *CI_TEMPLATE
 #   << : *UNIX_ENV
 #
 # memcheck_task:
 #   container:
 #     # Just uses a recent/common distro to run memory error/leak checks.
 #     dockerfile: ci/ubuntu-18.04/Dockerfile
 #     cpu: 8
 #     # AddressSanitizer uses more memory than normal config.
 #     memory: 8GB
 #   << : *CI_TEMPLATE
 #   env:
 #     CIRRUS_WORKING_DIR: /broker
 #     BROKER_CI_CPUS: *CPUS
 #     BROKER_CI_CONFIGURE_FLAGS: *MEMCHECK_CONFIG
 #     BROKER_CI_MEMCHECK: true

windows_task:
  # 2 hour timeout just for potential of building Docker image taking a while
  timeout_in: 120m
  windows_container:
    image: cirrusci/windowsservercore:2019
    cpu: 4
    # Not allowed to request less than 8GB for an 8 CPU Windows VM.
    memory: 8GB
  sync_submodules_script: git submodule update --recursive --init
  install_script: ci/windows/install.cmd
  prepare_script: ci/windows/prepare.cmd
  build_script: ci/windows/build.cmd
  test_script: ci/windows/test.cmd
  env:
    BROKER_CI_CPUS: 4
